#logging.level.org.springframework=DEBUG
#logging.level.restcontroller=DEBUG
 
#output to a temp_folder/file
#logging.file=/Users/viveksharma/Documents/vivek/springboot.log
 
# Logging pattern for the console
#logging.pattern.console= %d{yyyy-MM-dd HH:mm:ss} - %msg%n
 
# Logging pattern for file
#logging.pattern.file= %d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%



#mongoDB credential 
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
#spring.data.mongodb.authentication-database=
#spring.data.mongodb.username=
#spring.data.mongodb.password=
spring.data.mongodb.database=rest_tutorial






# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=jdbc:oracle:thin:@//localhost:1521/xe
spring.datasource.username=ecommerce
spring.datasource.password=ecommerce
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=create
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle10gDialect
#http port configuration
server.port=8088

